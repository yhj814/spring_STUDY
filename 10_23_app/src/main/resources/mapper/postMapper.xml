<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.app.mapper.PostMapper">
    <sql id="search">
        <if test="search.keyword != null and search.keyword != 'null'.toString()">
            <choose>
                <when test="search.types != null">
                    <foreach item="type" collection="search.types">
                        <if test="type == 'member-name'.toString()">
                            and member_name like concat('%', #{search.keyword}, '%')
                        </if>
                        <if test="type == 'post-title'.toString()">
                            and post_title like concat('%', #{search.keyword}, '%')
                        </if>
                        <if test="type == 'post-content'.toString()">
                            and post_content like concat('%', #{search.keyword}, '%')
                        </if>
                    </foreach>
                </when>
                <otherwise>
                    and (
                    member_name like concat('%', #{search.keyword}, '%')
                    or post_title like concat('%', #{search.keyword}, '%')
                    or post_content like concat('%', #{search.keyword}, '%')
                    )
                </otherwise>
            </choose>
        </if>
    </sql>
    <insert id="insert">
        insert into tbl_post(post_title, post_content, post_read_count, member_id)
        values(#{postTitle}, #{postContent}, #{postReadCount}, #{memberId})
    </insert>

    <select id="selectAll" resultType="postDTO">
        select p.id, member_email, member_password, member_name, post_title, post_content, post_read_count, member_id, p.created_date, p.updated_date
        from tbl_member m join tbl_post p
        on m.id = p.member_id
        <include refid="search"/>
        order by
        <choose>
            <when test="pagination.order == 'recent'.toString()">id</when>
            <otherwise>post_read_count</otherwise>
        </choose>
        desc
        limit #{pagination.startRow}, #{pagination.rowCount}
    </select>

    <select id="selectTotal">
        select count(*) from tbl_post
    </select>

    <select id="selectTotalWithSearch">
        select count(*) from tbl_member m join tbl_post p
        on m.id = p.member_id
        <include refid="search"/>
    </select>

    <select id="selectById">
        select p.id, member_email, member_password, member_name, post_title, post_content, post_read_count, member_id, p.created_date, p.updated_date
        from tbl_member m join tbl_post p
        on m.id = p.member_id and p.id = #{id}
    </select>

    <update id="updatePostReadcount">
        update tbl_post
        set post_read_count = post_read_count + 1
        where id = #{id}
    </update>
</mapper>
















